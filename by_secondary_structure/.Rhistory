install.packages('corrplot')
library(corrplot)
setwd('C:/Users/Jan_Huang/Desktop/helix_grindtime/by_secondary_structure')
data <- read.csv('data_full.csv')
data <- subset(data, select=c('seq', 'code', 'disp', 'GC', 'ss', 'maxORF', 'ORFcover'))
data$code <- as.factor(data$code)
?corrplot
View(data)
feature_cols <- c(3,4,6,7)
corrplot(data[feature_cols], type='upper', order='hclut')
corrplot(data[feature_cols], type='upper', order='hclust')
corrplot(data[3:4], type='upper', order='hclust')
M <- cor(data[feature_cols,])
M <- cor(data[feature_cols])
corrplot(M)
corrplot(M, type='upper')
corrplot(M, type='color')
corrplot(M, order='hclust')
corrplot(M, type='upper')
corrplot(M, type='upper', method='color')
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=30)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=90)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=70)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=90)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45)
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=45)
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=90)
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=45)
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=0)
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=90)
corrplot(M, type='lower', method='number', tl.col='black', tl.srt=90)
corrplot(M, type='lower', method='number', tl.col='black', tl.srt=90, addCoef.col='black')
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=90, addCoef.col='black')
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=90, addCoef.col='darkblue')
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=90, addCoef.col='navy')
corrplot(M, type='lower', method='color', tl.col='black', tl.srt=90, addCoef.col='black', diag=FALSE)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=90, addCoef.col='black', diag=FALSE)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=0, addCoef.col='black', diag=FALSE)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE)
?corrplot
corrplot(M, type='upper', method='color', col=col(200), tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE)
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(1,1,1,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(1,1,1,0))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(1,1,2,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(5,1,2,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,1,2,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,2,2,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,2,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,3,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=90, addCoef.col='black', diag=FALSE, mar=c(0,0,3,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,3,1))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,1,0))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,0,0))
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,1,0))
library(ggplot2)
ggplot(data=data, aes(data$disp, fill=code)) + geom_histogram(binwidth = .05) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Count') + scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding'))
ggplot(data=data, aes(data$disp, fill=ss)) + geom_histogram(binwidth = .05) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Count'))
ggplot(data=data, aes(data$disp, fill=ss)) + geom_histogram(binwidth = .05) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Count')
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .05) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Count')
ggplot(data=data, aes(data$GC, fill=code)) + geom_histogram(binwidth = 1.15) + labs(title='Histogram of GC Percentage', x='GC Percentage', y='Density') + scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding'))
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .05) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density')
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density')
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density') + geom_line(data=data, aes(x=data$disp, y =..density..), color = "red")
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density') + geom_line(data=data, aes(x=data$disp), color = "red")
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density')
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density') + geom_line(data=data, aes(x=data$disp), color = "red")
disp_by_ss <- ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density')
plot(disp_by_ss)
disp_by_ss <- disp_by_ss + geom_line(data=data, aes(x=data$disp, y=..density..), color = "red")
plot(disp_by_ss)
disp_by_ss <- disp_by_ss + geom_line(data=data, aes(x=data$disp, y=..density.., fill=ss))
disp_by_ss <- disp_by_ss + geom_line(data=data, aes(x=data$disp, y=..density..))
plot(disp_by_ss)
disp_by_ss <- ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .01) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density')
plot(disp_by_ss)
disp_by_ss <- ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .025) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density')
plot(disp_by_ss)
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_histogram(binwidth = .025) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density') + geom_density()
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + geom_density()
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + labs(title='Histogram of Median Disparity', x='Median Disparity', y='Density') + geom_density()
ggplot(data=data, aes(x=data$disp, y=..density.., fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density()
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density()
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.5)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.5)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(position=fill)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(position='fill')
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.2)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Coding'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_manual(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) + guides(fill=FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) + theme(legend.position='none')
scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'Secondary Structure', breaks = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = '', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) + labs(title='Median Disparity', x='Median Disparity', y='Density') + geom_density(alpha=0.1) + scale_fill_discrete(name = 'SS', labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS')
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'), guide=FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
theme(legend.position = c('0,0'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
theme(legend.position = c('1,1'))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
theme(legend.position = c(0.9, 0.2))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
guides(fill=guide_legend(title="New Legend Title")) +
theme(legend.position = c(0.9, 0.2))
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
theme(legend.position = c(0.9, 0.2))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
theme(legend.position = c(0.9, 0.2))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
guides(fill=guide_legend(title="New Legend Title"))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1, show.legend = FALSE) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
guides(fill=guide_legend(title="New Legend Title"))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1, show_guide = FALSE) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
guides(fill=guide_legend(title="New Legend Title"))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1, show.legend = FALSE) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
guides(fill=guide_legend(title="New Legend Title"))
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1, show.legend = FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
?stat_density
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
stat_density(aes(x=data$disp, color=ss),
geom="line",position="identity")
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1) +
stat_density(aes(x=data$disp, color=ss),
geom="line",position="identity", show.legend = FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1, show.legend=FALSE) +
stat_density(aes(x=data$disp, color=ss),
geom="line",position="identity", show.legend = FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
stat_density(aes(x=data$disp, color=ss),
geom="line",position="identity", show.legend = FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1, show.legend=FALSE) +
stat_density(aes(x=data$disp, color=ss),
geom="line",position="identity", alpha=0.1, show.legend = FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
stat_density(aes(x=data$disp, color=ss),
geom="line",position="identity", alpha=0.1, show.legend = FALSE)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
?ggplot
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
xlim(0,2) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
xlim(0.5,1.5) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
xlim(0.3,1.3) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
xlim(0.25,1.25) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
xlim(0.3,1.2) +
scale_fill_discrete(name = 'SS', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$disp, y=..density.., color=ss, fill=ss)) +
xlim(0.3,1.2) +
scale_fill_discrete(name = 'Secondary Structure', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='Median Disparity by Secondary Structure', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$GC, y=..density.., color=ss, fill=ss)) +
scale_fill_discrete(name = 'Secondary Structure', breaks = c('', 'a', 'ab', 'b', 'fSS'), labels = c('Noncoding', 'Mainly Alpha', 'Alpha Beta', 'Mainly Beta', 'Few Secondary Structures')) +
labs(title='GC% by Secondary Structure', x='Median Disparity', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$GC, y=..density.., color=code, fill=code)) +
scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding')) +
labs(title='GC Percentage vs Coding Status', x='GC%', y='Density') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$GC, color=code, fill=code)) +
scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding')) +
labs(title='GC Percentage vs Coding Status', x='GC%', y='Count') +
geom_density(alpha=0.1)
ggplot(data=data, aes(x=data$GC, color=code, fill=code)) +
scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding')) +
labs(title='GC Percentage vs Coding Status', x='GC%', y='Count')
y=..density..,
ggplot(data=data, aes(x=data$GC, y=..density.., color=code, fill=code)) +
scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding')) +
labs(title='GC Percentage vs Coding Status', x='GC%', y='Density') +
geom_density(alpha=0.1)
plot_ly(data=data, x=~GC, y=~disp, z=~maxORF, color=~code)
?plot_ly
library(plotly)
plot_ly(data=data, x=~GC, y=~disp, z=~maxORF, color=~code)
plot_ly(data=data, x=~GC, y=~disp, z=~ORFcover, color=~code)
maxORF
plot_ly(data=data, x=~GC, y=~disp, z=~maxORF, color=~code)
maxnstop <- read.csv('data_full_maxNStop.csv')
maxnstop <- as.matrix(read.csv('data_full_maxNStop.csv'))
for (i in nrow(data)) {
data$maxnstop[i] <- maxnstop[i]
}
write.csv(data, 'data_full.csv')
View(data)
maxnstop <- as.matrix(read.csv('data_full_maxNStop.csv'))
for (i in nrow(data)) {
data$maxnstop[i] <- maxnstop[i]
}
maxNStop <- as.matrix(read.csv('data_full_maxNStop.csv'))
for (i in 1:nrow(maxNStop)) {
data$maxnstop[i] <- maxNStop[i]
}
write.csv(data, 'data_full.csv')
View(data)
model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
library(caret)
library(ROCR)
library(plotROC)
model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
data$code <- as.factor(data$code)
train_indices_a <- sample(x=1:nrow(data[data$ss=='a',]), size=round(0.75*nrow(data[data$ss=='a',])))
train_indices_b <- sample(x=1:nrow(data[data$ss=='b',]), size=round(0.75*nrow(data[data$ss=='b',])))
train_indices_ab <- sample(x=1:nrow(data[data$ss=='ab',]), size=round(0.75*nrow(data[data$ss=='ab',])))
train_indices_fSS <- sample(x=1:nrow(data[data$ss=='fSS',]), size=round(0.75*nrow(data[data$ss=='fSS',])))
train_indices_nc <- sample(x=1:nrow(data[data$ss=='',]), size=round(0.75*nrow(data[data$ss=='',])))
train_indices_all <- c(train_indices_a, train_indices_b, train_indices_ab, train_indices_fSS, train_indices_nc)
train <- data[train_indices_all,]
test <- data[-train_indices_all,]
model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
model <- glm(code ~ GC + disp + maxORF + ORFcover, family = 'binomial', train)
model <- glm(code ~ GC + disp, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
View(train)
model <- glm(code ~ GC + disp, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(p_class, test[['code']])
model <- glm(code ~ GC + disp, family = 'binomial', train)
write.csv(train, 'data_train_proportional.csv')
write.csv(test, 'data_test_proportional.csv')
library(caret)
setwd('C:/Users/Jan_Huang/Desktop/helix_grindtime/by_secondary_structure')
train <- read.csv('data_train_proportional.csv')
source('C:/Users/Jan_Huang/Desktop/helix_grindtime/by_secondary_structure/test_classification.r')
train <- subset(train, select=c('seq', 'code', 'disp', 'GC', 'ss', 'maxORF', 'ORFcover', 'maxnstop'))
View(test)
View(train)
train <- read.csv('data_train_proportional.csv')
View(train)
train <- subset(train, select=c('seq', 'code', 'disp', 'GC', 'ss', 'maxORF', 'ORFcover', 'maxnstop'))
data$code <- as.factor(data$code)
set.seed(500)
model <- glm(code ~ GC + disp, family = 'binomial', train)
index <- sample(x = 1:nrow(data), size = round(0.75 * nrow(data)))
np_train <- data[index,]
np_test <- data[-index,]
model <- glm(code ~ GC + disp, family = 'binomial', np_train)
p <- predict(model, test, type='response')
summary(p)
p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(p_class, test[['code']])
75a_index <- sample(x = 1:nrow(data[data$ss=='a',]), size = round(0.75 * nrow(data[data$ss=='a',])))
a75_index <- sample(x = 1:nrow(data[data$ss=='a',]), size = round(0.75 * nrow(data[data$ss=='a',])))
a75 <- data[a75_index,]
model <- glm(code ~ GC + disp, family = 'binomial', a75)
View(a75)
View(train)
train_indices_nc <- sample(x=1:nrow(data[data$ss=='',]), size=round(0.75*nrow(data[data$ss=='',])))
train_indices_nc <- sample(x=1:nrow(data[data$code==0,]), size=round(0.75*nrow(data[data$code==0,])))
train_indices_all <- c(train_indices_a, train_indices_b, train_indices_ab, train_indices_fSS, train_indices_nc)
train <- data[train_indices_all,]
test <- data[-train_indices_all,]
model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
model <- glm(code ~ GC + disp + maxORF + ORFcover, family = 'binomial', train)
View(train)
train_nc <- data[train_indices_nc,]
View(train_nc)
train_indices_nc <- sample(x=1:nrow(data[data$code==0,]), size=round(0.75*nrow(data[data$code==0,])))
train_nc <- data[train_indices_nc,]
View(data)
?which
which(data$ss=='fSS')
nrow(which(data$ss=='fSS'))
nrow(as.data.frame(which(data$ss=='fSS')))
train_indices_a <- sample(x=1:nrow(as.data.frame(which(data$ss=='a'))), size=round(0.75*nrow(data[data$ss=='a',])))
train_indices_b <- sample(x=1:nrow(as.data.frame(which(data$ss=='b'))), size=round(0.75*nrow(data[data$ss=='b',])))
train_indices_ab <- sample(x=1:nrow(as.data.frame(which(data$ss=='ab'))), size=round(0.75*nrow(data[data$ss=='ab',])))
View(data)
maxNStop <- as.matrix(read.csv('data_full_maxNStop.csv'))
for (i in 1:nrow(maxNStop)) {
data$maxnstop[i] <- maxNStop[i]
}
View(data)
feature_cols <- c(3,4,6,7,8)
M <- cor(data[feature_cols])
corrplot(M, type='upper', method='color', tl.col='black', tl.srt=45, addCoef.col='black', diag=FALSE, mar=c(0,0,1,0))
model <- glm(code ~ GC + disp, family = 'binomial', train)
train_indices_fSS <- sample(x=1:nrow(as.data.frame(which(data$ss=='fSS'))), size=round(0.75*nrow(data[data$ss=='fSS',])))
train_indices_fSS <- sample(x=1:nrow(as.data.frame(which(data$code==0))), size=round(0.75*nrow(data[data$code==0,])))
train_indices_all <- c(train_indices_a, train_indices_b, train_indices_ab, train_indices_fSS, train_indices_nc)
train <- data[train_indices_all,]
test <- data[-train_indices_all,]
model <- glm(code ~ GC + disp, family = 'binomial', train)
View(train)
nrow(as.data.frame(which(data$ss=='a'))
)
as.data.frame(which(data$ss=='a')
)
as.list(which(data$ss=='fSS'))
as.vector(which(data$ss=='fSS'))
train_indices_a <- sample(x = as.vector(which(data$ss=='a')), size = round(0.75 * nrow(data[data$ss=='a', ])))
train_indices_b <- sample(x = as.vector(which(data$ss=='b')), size = round(0.75 * nrow(data[data$ss=='b', ])))
train_indices_ab <- sample(x = as.vector(which(data$ss=='ab')), size = round(0.75 * nrow(data[data$ss=='ab', ])))
train_indices_fSS <- sample(x = as.vector(which(data$ss=='fSS')), size = round(0.75 * nrow(data[data$ss=='fSS', ])))
train_indices_nc <- sample(x = as.vector(which(data$code==0)), size = round(0.75 * nrow(data[data$code==0, ])))
train_indices_all <- c(train_indices_a, train_indices_b, train_indices_ab, train_indices_fSS, train_indices_nc)
train <- data[train_indices_all,]
test <- data[-train_indices_all,]
model <- glm(code ~ GC + disp, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(p_class, test[['code']])
model <- glm(code ~ GC + disp + maxORF + ORFcover, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(p_class, test[['code']])
importance <- varImp(model, scale=FALSE)
print(importance)
model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(p_class, test[['code']])
importance <- varImp(model, scale=FALSE)
print(importance)
model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
?train
names(getModelInfo())
control_model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop, family = 'binomial', train)
control_p <- predict(control_model, test, type = 'response')
summary(p)
control_p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(control_p_class, test[['code']])
exp_model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop + disp, family = 'binomial', train)
exp_p <- predict(exp_model, test, type = 'response')
summary(exp_p)
exp_p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(exp_p_class, test[['code']])
exp_model <- glm(code ~ GC + disp + maxORF + ORFcover + maxnstop + disp, family = 'binomial', train)
exp_p <- predict(exp_model, test, type = 'response')
summary(exp_p)
View(data)
control_model <- glm(code ~ GC + maxORF + ORFcover + maxnstop, family = 'binomial', train)
control_p <- predict(control_model, test, type = 'response')
summary(p)
control_p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(control_p_class, test[['code']])
control_model <- glm(code ~ GC + maxORF + ORFcover, family = 'binomial', train)
control_p <- predict(control_model, test, type = 'response')
summary(p)
control_p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(control_p_class, test[['code']])
