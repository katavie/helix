a <- read.csv('alpha_coding.csv')
setwd('C:/Users/Jan_Huang/Desktop/helix_grindtime/by_secondary_structure')
a <- read.csv('alpha_coding.csv')
b <- read.csv('beta_coding.csv')
ab <- read.csv('ab_coding.csv')
fSS <- read.csv('fewSS_coding.csv')
View(a)
a <- read.csv('alpha_coding.csv', header=FALSE)
View(a)
b <- read.csv('beta_coding.csv', header=FALSE)
ab <- read.csv('ab_coding.csv', header=FALSE)
fSS <- read.csv('fewSS_coding.csv', header=FALSE)
a <- read.csv('alpha_coding_filtered.csv', header=FALSE)
b <- read.csv('beta_coding_filtered.csv', header=FALSE)
ab <- read.csv('ab_coding_filtered.csv', header=FALSE)
fSS <- read.csv('fewSS_coding_filtered.csv', header=FALSE)
a$ss <- 'a'
b$ss <- 'b'
ab$ss <- 'ab'
fSS$ss <- 'fSS'
data <- rbind(a,b,ab,fSS)
?colnames
colnames(data) <- c('seq', 'ss')
View(data)
data$code <- 1
View(data)
write.csv(data, 'data.csv')
noncoding <- read.csv('introns_final_8179.txt', header=FALSE)
View(noncoding)
View(data)
noncoding$ss <- ''
View(data)
noncoding$code <- 0
colnames(noncoding) <- c('seq', 'ss', 'code')
data <- rbind(data,noncoding)
data <- read.csv('data.csv')
data <- rbind(data,noncoding)
data <- subset(data, select=c('seq,code,ss'))
data <- subset(data, select=c('seq', 'code', 'ss'))
data <- rbind(data,noncoding)
write.csv(data, 'data_full.csv')
View(data)
a <- read.csv('alpha_coding_filtered.csv', header=FALSE)
b <- read.csv('beta_coding_filtered.csv', header=FALSE)
ab <- read.csv('ab_coding_filtered.csv', header=FALSE)
fSS <- read.csv('fewSS_coding_filtered.csv', header=FALSE)
a$ss <- 'a'
b$ss <- 'b'
ab$ss <- 'ab'
fSS$ss <- 'fSS'
noncoding <- read.csv('introns_final_filtered.csv', header=FALSE)
noncoding$ss <- ''
noncoding$code <- 0
colnames(noncoding) <- c('seq', 'ss', 'code')
data <- rbind(a,b,ab,fSS)
data$code <- 1
colnames(data) <- c('seq', 'ss', 'code')
View(data)
View(fSS)
View(noncoding)
data <- rbind(data,noncoding)
write.csv(data, 'data_full.csv')
disp <- as.matrix(read.csv('data_full_disp.csv'))
for (i in 1:nrow(disp)) {
data$disp[i] <- disp[i]
}
GC <- as.matrix(read.csv('data_full_GC.csv'))
for (i in 1:nrow(GC)) {
data$GC[i] <- GC[i]
}
?unique
maxORF <- as.matrix(read.csv('data_full_maxORF.csv'))
for (i in 1:nrow(maxORF)) {
data$maxORF[i] <- maxORF[i]
}
ORFcover <- as.matrix(read.csv('data_full_ORFcover.csv'))
ORFcover <- as.matrix(read.csv('data_full_ORFcover.csv'))
ORFcover <- as.matrix(read.csv('data_full_ORFcover.csv'))
for (i in 1:nrow(ORFcover)) {
data$ORFcover[i] <- ORFcover[i]
}
View(data)
write.csv(data, 'data.csv')
write.csv(data, 'data_full.csv')
View(data)
data <- unique(data[,2])
duplicated(data)
data <- read.csv('data_full.csv')
data <- subset(data, select=c('seq', 'length', 'code', 'disp', 'GC', 'ss', 'maxORF', 'ORFcover'))
View(data)
data <- subset(data, select=c('seq', 'code', 'disp', 'GC', 'ss', 'maxORF', 'ORFcover'))
data$code <- as.factor(data$code)
duplicated(data)
?duplicated
duplicated(data$seq)
data <- data(!duplicated(data$seq))
data <- data[!duplicated(data$seq), ]
data <- data[!duplicated(data$seq)]
data <- data[!duplicated(data$seq), ]
data <- read.csv('data_full.csv')
data <- subset(data, select=c('seq', 'code', 'disp', 'GC', 'ss', 'maxORF', 'ORFcover'))
data$code <- as.factor(data$code)
data <- data[!duplicated(data$seq), ]
nrow(data[data$ss='a',])
nrow(data[data$ss=='a',])
nrow(data[data$ss=='b',])
nrow(data[data$ss=='ab',])
nrow(data[data$ss=='fSS',])
nrow(data[data$ss=='',])
nrow(data[data$code==0,])
intron_indices <- sample(x=1:nrow(data[data$ss=='',]), size=4506)
introns <- data[data$ss=='',][intron_indices]
introns <- data[data$ss=='',][intron_indices,]
data <- data[!data$code==0]
data <- data[!data$code==0,]
data <- rbind(data,introns)
write.csv(data, 'data_full.csv')
View(data)
mean(data[data$code == '1', ]$GC) # 51.86%
mean(data[data$code == '0', ]$GC) # 46.49%
ggplot(data=data, aes(data$maxORF, fill=code)) + geom_histogram() + labs(title='Histogram of Max ORF Length', x='Max ORF Length', y='Count') + scale_fill_discrete(name = '', labels = c('Noncoding', 'Coding'))
library(ggplot2)
model <- glm(code ~ GC + disp + maxORF + ORFcover, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
library(caret)
model <- glm(code ~ GC + disp + maxORF + ORFcover, family = 'binomial', train)
index <- sample(x = 1:nrow(data), size = round(0.75 * nrow(data))) # indices of observations to be included in train set, drawing w/o replacement by default
train <- data[index,] # 1486 observations
test <- data[-index,] # rows that train didn't include; 495 observations
model <- glm(code ~ GC + disp, family = 'binomial', train)
p <- predict(model, test, type='response')
summary(p)
p_class <- ifelse(p > .50, 1, 0)
confusionMatrix(p_class, test[['code']])
p_class <- ifelse(p > .50, 0, 1)
confusionMatrix(p_class, test[['code']])
(correlationMatrix <- cor(data[,3:4+6:7]))
(correlationMatrix <- cor(data[,feature_cols]))
feature_cols <- c(3,4,6,7)
(correlationMatrix <- cor(data[,feature_cols]))
importance <- varImp(model, scale=FALSE)
print(importance)
?varImp
importance
summary(model)
model <- glm(code ~ GC + disp + maxORF + ORFcover, family = 'binomial', train)
summary(model)
importance <- varImp(model, scale=FALSE)
print(importance)
